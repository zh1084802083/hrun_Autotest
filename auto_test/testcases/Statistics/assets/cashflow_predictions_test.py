# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases/Statistics/assets/cashflow_predictions.yml


import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase

from testcases.Account.create_bills_test import TestCaseCreateBills as CreateBills


class TestCaseCashflowPredictions(HttpRunner):

    config = (
        Config("数据舱--现金流预测")
        .variables(
            **{
                "access_token": "${get_token()}",
                "endDate": "2021-12-31",
                "startDate": "2021-01-01",
            }
        )
        .verify(False)
        .export(*["building_id"])
    )

    teststeps = [
        Step(
            RunTestCase("添加账单收入、支出数据")
            .call(CreateBills)
            .export(*["building_id", "room_id"])
        ),
        Step(
            RunRequest("现金流预测--租金、按月查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "MONTH",
                    "billTypes": "租金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[7].costAmount", 0)
            .assert_equal("body[7].incomeAmount", 98.12)
            .assert_equal("body[7].worthAmount", 98.12)
            .assert_equal("body[8].costAmount", 100)
            .assert_equal("body[8].incomeAmount", 3241.67)
            .assert_equal("body[8].worthAmount", 3141.67)
        ),
        Step(
            RunRequest("现金流预测--租金+租金保证金、按月查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "MONTH",
                    "billTypes": "租金,租金保证金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[7].costAmount", 0)
            .assert_equal("body[7].incomeAmount", 98.12)
            .assert_equal("body[7].worthAmount", 98.12)
            .assert_equal("body[8].costAmount", 130)
            .assert_equal("body[8].incomeAmount", 6333.34)
            .assert_equal("body[8].worthAmount", 6203.34)
        ),
        Step(
            RunRequest("现金流预测--按月查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "MONTH",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[7].costAmount", 0)
            .assert_equal("body[7].incomeAmount", 98.12)
            .assert_equal("body[7].worthAmount", 98.12)
            .assert_equal("body[8].costAmount", 165.5)
            .assert_equal("body[8].incomeAmount", 6348.84)
            .assert_equal("body[8].worthAmount", 6183.34)
        ),
        Step(
            RunRequest("现金流预测--租金、按季查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "QUARTER",
                    "billTypes": "租金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[2].costAmount", 100)
            .assert_equal("body[2].incomeAmount", 3339.79)
            .assert_equal("body[2].worthAmount", 3239.79)
        ),
        Step(
            RunRequest("现金流预测--租金+租金保证金、按季查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "QUARTER",
                    "billTypes": "租金,租金保证金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[2].costAmount", 130)
            .assert_equal("body[2].incomeAmount", 6431.46)
            .assert_equal("body[2].worthAmount", 6301.46)
        ),
        Step(
            RunRequest("现金流预测--按季查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "QUARTER",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[2].costAmount", 165.5)
            .assert_equal("body[2].incomeAmount", 6446.96)
            .assert_equal("body[2].worthAmount", 6281.46)
        ),
        Step(
            RunRequest("现金流预测--租金、按年查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "YEAR",
                    "billTypes": "租金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[0].costAmount", 100)
            .assert_equal("body[0].incomeAmount", 3339.79)
            .assert_equal("body[0].worthAmount", 3239.79)
        ),
        Step(
            RunRequest("现金流预测--租金+租金保证金、按年查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "YEAR",
                    "billTypes": "租金,租金保证金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[0].costAmount", 130)
            .assert_equal("body[0].incomeAmount", 6431.46)
            .assert_equal("body[0].worthAmount", 6301.46)
        ),
        Step(
            RunRequest("现金流预测--按年查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "$endDate",
                    "startDate": "$startDate",
                    "temporalUnit": "YEAR",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body[0].costAmount", 165.5)
            .assert_equal("body[0].incomeAmount", 6446.96)
            .assert_equal("body[0].worthAmount", 6281.46)
        ),
        Step(
            RunRequest("现金流预测详情--租金、按月查询-8")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-08-31",
                    "startDate": "2021-08-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "MONTH",
                    "billTypes": "租金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "IN")
            .assert_equal("body.content[0].billType", "租金")
            .assert_equal("body.content[0].amount", 98.12)
        ),
        Step(
            RunRequest("现金流预测详情--租金+租金保证金、按月查询-8")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-08-31",
                    "startDate": "2021-08-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "MONTH",
                    "billTypes": "租金,租金保证金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "IN")
            .assert_equal("body.content[0].billType", "租金")
            .assert_equal("body.content[0].amount", 98.12)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "IN")
            .assert_equal("body.content[1].billType", "租金保证金")
            .assert_equal("body.content[1].amount", 0)
        ),
        Step(
            RunRequest("现金流预测详情--按月查询-8")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-08-31",
                    "startDate": "2021-08-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "MONTH",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "IN")
            .assert_equal("body.content[0].billType", "租金")
            .assert_equal("body.content[0].amount", 98.12)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "IN")
            .assert_equal("body.content[1].billType", "租金保证金")
            .assert_equal("body.content[1].amount", 0)
        ),
        Step(
            RunRequest("现金流预测详情--租金、按月查询-9")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-09-30",
                    "startDate": "2021-09-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "MONTH",
                    "billTypes": "租金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "租金")
            .assert_equal("body.content[0].amount", 100)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "IN")
            .assert_equal("body.content[1].billType", "租金")
            .assert_equal("body.content[1].amount", 200)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "IN")
            .assert_equal("body.content[2].billType", "租金")
            .assert_equal("body.content[2].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--租金+租金保证金、按月查询-9")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-09-30",
                    "startDate": "2021-09-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "MONTH",
                    "billTypes": "租金,租金保证金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "租金保证金")
            .assert_equal("body.content[0].amount", 30)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "OUT")
            .assert_equal("body.content[1].billType", "租金")
            .assert_equal("body.content[1].amount", 100)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "IN")
            .assert_equal("body.content[2].billType", "租金保证金")
            .assert_equal("body.content[2].amount", 50)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "租金")
            .assert_equal("body.content[3].amount", 200)
            .assert_equal("body.content[4].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[4].action", "IN")
            .assert_equal("body.content[4].billType", "租金")
            .assert_equal("body.content[4].amount", 3041.67)
            .assert_equal("body.content[5].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[5].action", "IN")
            .assert_equal("body.content[5].billType", "租金保证金")
            .assert_equal("body.content[5].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--按月查询-9")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-09-30",
                    "startDate": "2021-09-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "MONTH",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "物业费")
            .assert_equal("body.content[0].amount", 35.5)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "OUT")
            .assert_equal("body.content[1].billType", "租金保证金")
            .assert_equal("body.content[1].amount", 30)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "OUT")
            .assert_equal("body.content[2].billType", "租金")
            .assert_equal("body.content[2].amount", 100)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "物业费")
            .assert_equal("body.content[3].amount", 15.5)
            .assert_equal("body.content[4].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[4].action", "IN")
            .assert_equal("body.content[4].billType", "租金保证金")
            .assert_equal("body.content[4].amount", 50)
            .assert_equal("body.content[5].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[5].action", "IN")
            .assert_equal("body.content[5].billType", "租金")
            .assert_equal("body.content[5].amount", 200)
            .assert_equal("body.content[6].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[6].action", "IN")
            .assert_equal("body.content[6].billType", "租金")
            .assert_equal("body.content[6].amount", 3041.67)
            .assert_equal("body.content[7].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[7].action", "IN")
            .assert_equal("body.content[7].billType", "租金保证金")
            .assert_equal("body.content[7].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--租金、按季查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-09-30",
                    "startDate": "2021-07-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "QUARTER",
                    "billTypes": "租金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "租金")
            .assert_equal("body.content[0].amount", 100)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "IN")
            .assert_equal("body.content[1].billType", "租金")
            .assert_equal("body.content[1].amount", 200)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "IN")
            .assert_equal("body.content[2].billType", "租金")
            .assert_equal("body.content[2].amount", 98.12)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "租金")
            .assert_equal("body.content[3].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--租金+租金保证金、按季查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-09-30",
                    "startDate": "2021-07-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "QUARTER",
                    "billTypes": "租金,租金保证金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "租金保证金")
            .assert_equal("body.content[0].amount", 30)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "OUT")
            .assert_equal("body.content[1].billType", "租金")
            .assert_equal("body.content[1].amount", 100)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "IN")
            .assert_equal("body.content[2].billType", "租金保证金")
            .assert_equal("body.content[2].amount", 50)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "租金")
            .assert_equal("body.content[3].amount", 200)
            .assert_equal("body.content[4].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[4].action", "IN")
            .assert_equal("body.content[4].billType", "租金")
            .assert_equal("body.content[4].amount", 98.12)
            .assert_equal("body.content[5].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[5].action", "IN")
            .assert_equal("body.content[5].billType", "租金保证金")
            .assert_equal("body.content[5].amount", 0)
            .assert_equal("body.content[6].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[6].action", "IN")
            .assert_equal("body.content[6].billType", "租金")
            .assert_equal("body.content[6].amount", 3041.67)
            .assert_equal("body.content[7].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[7].action", "IN")
            .assert_equal("body.content[7].billType", "租金保证金")
            .assert_equal("body.content[7].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--按季查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-09-30",
                    "startDate": "2021-07-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "QUARTER",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "物业费")
            .assert_equal("body.content[0].amount", 35.5)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "OUT")
            .assert_equal("body.content[1].billType", "租金保证金")
            .assert_equal("body.content[1].amount", 30)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "OUT")
            .assert_equal("body.content[2].billType", "租金")
            .assert_equal("body.content[2].amount", 100)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "物业费")
            .assert_equal("body.content[3].amount", 15.5)
            .assert_equal("body.content[4].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[4].action", "IN")
            .assert_equal("body.content[4].billType", "租金保证金")
            .assert_equal("body.content[4].amount", 50)
            .assert_equal("body.content[5].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[5].action", "IN")
            .assert_equal("body.content[5].billType", "租金")
            .assert_equal("body.content[5].amount", 200)
            .assert_equal("body.content[6].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[6].action", "IN")
            .assert_equal("body.content[6].billType", "租金")
            .assert_equal("body.content[6].amount", 98.12)
            .assert_equal("body.content[7].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[7].action", "IN")
            .assert_equal("body.content[7].billType", "租金保证金")
            .assert_equal("body.content[7].amount", 0)
            .assert_equal("body.content[8].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[8].action", "IN")
            .assert_equal("body.content[8].billType", "租金")
            .assert_equal("body.content[8].amount", 3041.67)
            .assert_equal("body.content[9].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[9].action", "IN")
            .assert_equal("body.content[9].billType", "租金保证金")
            .assert_equal("body.content[9].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--租金、按年查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-12-31",
                    "startDate": "2021-01-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "YEAR",
                    "billTypes": "租金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "租金")
            .assert_equal("body.content[0].amount", 100)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "IN")
            .assert_equal("body.content[1].billType", "租金")
            .assert_equal("body.content[1].amount", 200)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "IN")
            .assert_equal("body.content[2].billType", "租金")
            .assert_equal("body.content[2].amount", 98.12)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "租金")
            .assert_equal("body.content[3].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--租金+租金保证金、按年查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-12-31",
                    "startDate": "2021-01-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "YEAR",
                    "billTypes": "租金,租金保证金",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "租金保证金")
            .assert_equal("body.content[0].amount", 30)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "OUT")
            .assert_equal("body.content[1].billType", "租金")
            .assert_equal("body.content[1].amount", 100)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "IN")
            .assert_equal("body.content[2].billType", "租金保证金")
            .assert_equal("body.content[2].amount", 50)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "租金")
            .assert_equal("body.content[3].amount", 200)
            .assert_equal("body.content[4].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[4].action", "IN")
            .assert_equal("body.content[4].billType", "租金")
            .assert_equal("body.content[4].amount", 98.12)
            .assert_equal("body.content[5].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[5].action", "IN")
            .assert_equal("body.content[5].billType", "租金保证金")
            .assert_equal("body.content[5].amount", 0)
            .assert_equal("body.content[6].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[6].action", "IN")
            .assert_equal("body.content[6].billType", "租金")
            .assert_equal("body.content[6].amount", 3041.67)
            .assert_equal("body.content[7].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[7].action", "IN")
            .assert_equal("body.content[7].billType", "租金保证金")
            .assert_equal("body.content[7].amount", 3041.67)
        ),
        Step(
            RunRequest("现金流预测详情--按年查询")
            .get("${ENV(api_url)}/assets/cashflow-predictions/detail")
            .with_params(
                **{
                    "billSelectAmount": "AMOUNT",
                    "buildingIds": "$building_id",
                    "endDate": "2021-12-31",
                    "startDate": "2021-01-01",
                    "page": "0",
                    "size": "100",
                    "temporalUnit": "YEAR",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.content[0].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[0].action", "OUT")
            .assert_equal("body.content[0].billType", "物业费")
            .assert_equal("body.content[0].amount", 35.5)
            .assert_equal("body.content[1].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[1].action", "OUT")
            .assert_equal("body.content[1].billType", "租金保证金")
            .assert_equal("body.content[1].amount", 30)
            .assert_equal("body.content[2].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[2].action", "OUT")
            .assert_equal("body.content[2].billType", "租金")
            .assert_equal("body.content[2].amount", 100)
            .assert_equal("body.content[3].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[3].action", "IN")
            .assert_equal("body.content[3].billType", "物业费")
            .assert_equal("body.content[3].amount", 15.5)
            .assert_equal("body.content[4].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[4].action", "IN")
            .assert_equal("body.content[4].billType", "租金保证金")
            .assert_equal("body.content[4].amount", 50)
            .assert_equal("body.content[5].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[5].action", "IN")
            .assert_equal("body.content[5].billType", "租金")
            .assert_equal("body.content[5].amount", 200)
            .assert_equal("body.content[6].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[6].action", "IN")
            .assert_equal("body.content[6].billType", "租金")
            .assert_equal("body.content[6].amount", 98.12)
            .assert_equal("body.content[7].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[7].action", "IN")
            .assert_equal("body.content[7].billType", "租金保证金")
            .assert_equal("body.content[7].amount", 0)
            .assert_equal("body.content[8].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[8].action", "IN")
            .assert_equal("body.content[8].billType", "租金")
            .assert_equal("body.content[8].amount", 3041.67)
            .assert_equal("body.content[9].other", "湖南神雀网络科技有限公司")
            .assert_equal("body.content[9].action", "IN")
            .assert_equal("body.content[9].billType", "租金保证金")
            .assert_equal("body.content[9].amount", 3041.67)
        ),
        Step(
            RunRequest("删除楼宇")
            .delete("${ENV(api_url)}/buildings/$building_id")
            .with_headers(
                **{
                    "authorization": "Bearer $access_token",
                    "content-type": "application/json; charset=utf-8",
                }
            )
            .validate()
            .assert_equal("status_code", 204)
        ),
    ]


if __name__ == "__main__":
    TestCaseCashflowPredictions().test_start()
