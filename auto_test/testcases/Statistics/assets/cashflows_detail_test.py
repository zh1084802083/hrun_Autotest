# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases/Statistics/assets/cashflows_detail.yml


import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase

from testcases.Buildings.buildings_test import TestCaseBuildings as Buildings


class TestCaseCashflowsDetail(HttpRunner):

    config = (
        Config("数据舱--现金流详情")
        .variables(**{"access_token": "${get_token()}"})
        .export(*["building_id"])
    )

    teststeps = [
        Step(RunTestCase("获取楼宇id").call(Buildings).export(*["building_id"])),
        Step(
            RunRequest("数据舱--现金流详情")
            .get("${ENV(api_url)}/assets/cashflows/detail")
            .with_params(
                **{
                    "buildingIds": "$building_id",
                    "domainTypes": "CASH_MATCH",
                    "endDate": "2021-08-31",
                    "page": "0",
                    "size": "20",
                    "startDate": "2021-08-01",
                    "temporalUnit": "MONTH",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.number", 0)
            .assert_equal("body.size", 20)
            .assert_equal("body.totalElements", 0)
            .assert_equal("body.totalPages", 0)
            .assert_equal("body.numberOfElements", 0)
            .assert_equal("body.hasContent", False)
            .assert_equal("body.first", True)
            .assert_equal("body.last", True)
            .assert_equal("body.empty", True)
        ),
    ]


if __name__ == "__main__":
    TestCaseCashflowsDetail().test_start()
