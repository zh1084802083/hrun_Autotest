# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases/Statistics/rental/month_rent_detail.yml


import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase

from testcases.Buildings.buildings_test import TestCaseBuildings as Buildings


class TestCaseMonthRentDetail(HttpRunner):

    config = (
        Config("数据舱--月出租率走势详情")
        .variables(**{"year": "2021", "access_token": "${get_token()}"})
        .export(*["building_id"])
    )

    teststeps = [
        Step(RunTestCase("获取楼宇id").call(Buildings).export(*["building_id"])),
        Step(
            RunRequest("月出租率走势详情--房源")
            .get("${ENV(api_url)}/data-statistics/rent-analyze/month-rent/detail")
            .with_params(
                **{
                    "buildingIds": "$building_id",
                    "month": "7",
                    "page": "0",
                    "size": "100",
                    "statisticSpaceType": "ROOM",
                    "year": "$year",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("月出租率走势详情--工位")
            .get("${ENV(api_url)}/data-statistics/rent-analyze/month-rent/detail")
            .with_params(
                **{
                    "buildingIds": "$building_id",
                    "month": "7",
                    "page": "0",
                    "size": "100",
                    "statisticSpaceType": "CUBICLE",
                    "year": "$year",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCaseMonthRentDetail().test_start()
