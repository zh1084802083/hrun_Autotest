# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases/Buildings/rooms/delete_rooms.yml


import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase

from testcases.Buildings.buildings_test import TestCaseBuildings as Buildings


class TestCaseDeleteRooms(HttpRunner):

    config = (
        Config("删除房源")
        .variables(
            **{
                "access_token": "${get_token()}",
                "room_number": "${random_int(101,199)}",
                "areaSize": "${str_to_int(10)}",
            }
        )
        .verify(False)
        .export(*["room_id", "building_id"])
    )

    teststeps = [
        Step(RunTestCase("获取楼宇id").call(Buildings).export(*["building_id"])),
        Step(
            RunRequest("新增可招商房源")
            .post("${ENV(api_url)}/buildings/$building_id/rooms")
            .with_headers(
                **{
                    "accept": "application/json",
                    "authorization": "Bearer $access_token",
                }
            )
            .with_json(
                {
                    "areaSize": "$areaSize",
                    "buildingId": "$building_id",
                    "cubicleUpdateRequests": [],
                    "floorName": "1",
                    "jsonData": '[{"required":false,"fieldName":"建筑面积","fieldType":"NUMBER","systemField":true},{"required":false,"fieldName":"装修","fieldType":"SINGLE_SELECT","values":["不限","毛坯","简装","精装"],"systemField":true},{"required":false,"fieldName":"预租单价","fieldType":"NUMBER","systemField":true}]',
                    "marketingAvailable": "true",
                    "realAreaSize": "$areaSize",
                    "roomNumber": "$room_number",
                    "spaceType": "ROOM",
                }
            )
            .extract()
            .with_jmespath("body", "room_id")
            .validate()
            .assert_equal("status_code", 201)
        ),
        Step(
            RunRequest("获取房源列表")
            .get("${ENV(api_url)}/buildings/rooms")
            .with_params(
                **{
                    "page": 0,
                    "size": 1000,
                    "loadOccupancyInfo": False,
                    "loadRentingInfo": True,
                    "buildingIds": "$building_id",
                    "spaceTypes": "ROOM",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .extract()
            .with_jmespath("body.length(content)", "room_count")
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("删除房源")
            .delete("${ENV(api_url)}/buildings/$building_id/rooms/$room_id")
            .with_headers(
                **{
                    "accept": "application/json",
                    "authorization": "Bearer $access_token",
                }
            )
            .validate()
            .assert_equal("status_code", 204)
        ),
        Step(
            RunRequest("删除房源后，检查房源数量")
            .get("${ENV(api_url)}/buildings/rooms")
            .with_params(
                **{
                    "page": 0,
                    "size": 1000,
                    "loadOccupancyInfo": False,
                    "loadRentingInfo": True,
                    "buildingIds": "$building_id",
                    "spaceTypes": "ROOM",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.length(content)", "${reduce_two($room_count, 1)}")
        ),
    ]


if __name__ == "__main__":
    TestCaseDeleteRooms().test_start()
