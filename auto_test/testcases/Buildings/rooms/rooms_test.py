# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases/Resource/rooms.yml


import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent))


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase

from testcases.Buildings.buildings_test import TestCaseBuildings as Buildings


class TestCaseRooms(HttpRunner):

    config = (
        Config("空间管理--房源列表")
        .variables(**{"access_token": "${get_token()}"})
        .export(*["building_id"])
    )

    teststeps = [
        Step(RunTestCase("获取楼宇id").call(Buildings).export(*["building_id"])),
        Step(
            RunRequest("获取房源列表")
            .get("${ENV(api_url)}/buildings/rooms")
            .with_params(
                **{"buildingIds": "$building_id", "size": "1000", "spaceTypes": "ROOM"}
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("获取可招商房源列表")
            .get("${ENV(api_url)}/buildings/rooms")
            .with_params(
                **{
                    "buildingIds": "$building_id",
                    "size": "1000",
                    "spaceTypes": "ROOM",
                    "available": "true",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("获取已出租房源面积")
            .get("${ENV(api_url)}/buildings/rooms")
            .with_params(
                **{
                    "buildingIds": "$building_id",
                    "size": "1000",
                    "spaceTypes": "ROOM",
                    "roomStatus": "OCCUPIED",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("获取工位类型房源列表")
            .get("${ENV(api_url)}/buildings/rooms")
            .with_params(
                **{
                    "buildingIds": "$building_id",
                    "size": "1000",
                    "spaceTypes": "CUBICLE",
                }
            )
            .with_headers(**{"authorization": "Bearer $access_token"})
            .validate()
            .assert_equal("status_code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCaseRooms().test_start()
